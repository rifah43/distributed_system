version: '3'
services:
  mongodb-service1:
    image: mongo:4
    restart: unless-stopped
    # ports:
    #   - "27017:27017"
    volumes:
      - mongo-data1:/data/db

  mongodb-service2:
    image: mongo:4
    restart: unless-stopped
    # ports:
    #   - "27018:27017" 
    volumes:
      - mongo-data2:/data/db

  mongodb-service3:
    image: mongo:4
    restart: unless-stopped
    # ports:
    #   - "27019:27017" 
    volumes:
      - mongo-data3:/data/db

  user:
    build:
      context: ./user
    ports:
      - "3001:3001"
    depends_on:
      - mongodb-service1
    environment:
      # - CORS_ORIGIN=http://frontend:80
        - DB_URL=mongodb://mongodb-service1/userdb

  post:
    build:
      context: ./post
    ports:
      - "3002:3002"
    depends_on:
      - mongodb-service2
    environment:
      # - CORS_ORIGIN=http://frontend:80
      - DB_URL=mongodb://mongodb-service2/postdb

  notification:
    build:
      context: ./notification
    ports:
      - "3003:3003"
    depends_on:
      - mongodb-service3
    environment:
      # - CORS_ORIGIN=http://frontend:80
      - DB_URL=mongodb://mongodb-service3/notificationdb

  # frontend:
  #   build:
  #     context: ./front-end
  #   ports:
  #     - "80:80"
  #   environment:
  #     - BACKEND_URL=http://user:3000
  #     - ANOTHER_BACKEND_URL=http://post:3000
  #     - YET_ANOTHER_BACKEND_URL=http://notification:3000

  #   depends_on:
  #     - user
  #     - post
  #     - notification

  nginx:
    image: nginx:latest
    build: .
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - user
      - post
      - notification
      # - frontend

volumes:
  mongo-data1:
  mongo-data2:
  mongo-data3:
