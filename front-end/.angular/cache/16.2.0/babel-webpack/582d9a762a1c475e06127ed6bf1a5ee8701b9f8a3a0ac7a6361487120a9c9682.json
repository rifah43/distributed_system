{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nexport class PostComponent {\n  constructor(formbuilder, http, router) {\n    this.formbuilder = formbuilder;\n    this.http = http;\n    this.router = router;\n    this.authenticated = false;\n    this.selectedFile = null;\n    this.jwtToken = null;\n  }\n  ngOnInit() {\n    this.jwtToken = localStorage.getItem('token');\n    console.log();\n    if (this.jwtToken) {\n      this.form = this.formbuilder.group({\n        content: [''],\n        image: ['']\n      });\n    } else {\n      this.router.navigate(['/login']);\n    }\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  submit() {\n    if (!this.jwtToken) {\n      swal.fire('Error!', 'Please log in to create a post.', 'error');\n      return;\n    }\n    const content = this.form.get('content')?.value;\n    const image = this.selectedFile;\n    const formData = new FormData();\n    formData.append('content', content);\n    if (image) {\n      formData.append('image', image, image.name);\n    }\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${this.jwtToken}`\n    });\n    this.http.post('http://localhost:9200/user/post', formData, {\n      headers: headers\n    }).subscribe(response => {\n      this.form.reset();\n      swal.fire({\n        title: 'Success!',\n        text: response.message,\n        icon: 'success',\n        timer: 1500,\n        showConfirmButton: false\n      });\n      this.selectedFile = null;\n      this.router.navigate(['/']);\n    }, error => {\n      console.error(error);\n    });\n  }\n}\n_class = PostComponent;\n_class.ɵfac = function PostComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-post\"]],\n  decls: 12,\n  vars: 1,\n  consts: [[1, \"main-w3layouts\", \"wrapper\"], [1, \"main-agileinfo\"], [1, \"agileits-top\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"content\"], [\"formControlName\", \"content\", \"id\", \"content\", \"placeholder\", \"Write your post here...\", \"required\", \"\"], [\"type\", \"file\", \"formControlName\", \"image\", 1, \"a\", 3, \"change\"], [\"type\", \"submit\", \"value\", \"POST NOW\"]],\n  template: function PostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n      i0.ɵɵtext(2, \"Create a post!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function PostComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(6, \"div\")(7, \"label\", 4);\n      i0.ɵɵtext(8, \"Content:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"textarea\", 5);\n      i0.ɵɵelementStart(10, \"input\", 6);\n      i0.ɵɵlistener(\"change\", function PostComponent_Template_input_change_10_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(11, \"input\", 7);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["HttpHeaders","swal","PostComponent","constructor","formbuilder","http","router","authenticated","selectedFile","jwtToken","ngOnInit","localStorage","getItem","console","log","form","group","content","image","navigate","onFileSelected","event","target","files","submit","fire","get","value","formData","FormData","append","name","headers","Authorization","post","subscribe","response","reset","title","text","message","icon","timer","showConfirmButton","error","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","selectors","decls","vars","consts","template","PostComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PostComponent_Template_form_ngSubmit_5_listener","ɵɵelement","PostComponent_Template_input_change_10_listener","$event","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\HP\\Desktop\\cpp\\docker_distributed_system\\distributed_system\\front-end\\src\\app\\post\\post.component.ts","C:\\Users\\HP\\Desktop\\cpp\\docker_distributed_system\\distributed_system\\front-end\\src\\app\\post\\post.component.html"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-post',\r\n  templateUrl: './post.component.html',\r\n  styleUrls: ['./post.component.css']\r\n})\r\nexport class PostComponent implements OnInit {\r\n  form: FormGroup;\r\n  authenticated = false;\r\n  selectedFile: File | null = null;\r\n  jwtToken: string | null = null;\r\n\r\n  constructor(private formbuilder: FormBuilder, private http: HttpClient, private router:Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.jwtToken = localStorage.getItem('token')\r\n    console.log();\r\n    \r\n\r\n    if(this.jwtToken){\r\n      this.form = this.formbuilder.group({\r\n        content: [''],\r\n        image: [''],\r\n      });\r\n    }\r\n    else{\r\n      this.router.navigate(['/login']); \r\n    }\r\n  }\r\n\r\n  onFileSelected(event: any) {\r\n    this.selectedFile = event.target.files[0];\r\n  }\r\n\r\n  submit(): void {\r\n    if (!this.jwtToken) {\r\n      swal.fire('Error!', 'Please log in to create a post.', 'error');\r\n      return;\r\n    }\r\n\r\n    const content = this.form.get('content')?.value;\r\n    const image = this.selectedFile;\r\n\r\n    const formData = new FormData();\r\n    formData.append('content', content);\r\n    if (image) {\r\n      formData.append('image', image, image.name);\r\n    }\r\n\r\n    const headers = new HttpHeaders({\r\n      Authorization: `Bearer ${this.jwtToken}`\r\n    });\r\n\r\n    this.http.post<any>('http://localhost:9200/user/post', formData, {\r\n      headers: headers\r\n    }).subscribe(\r\n      (response) => {\r\n        this.form.reset();\r\n        swal.fire({\r\n          title: 'Success!',\r\n          text: response.message,\r\n          icon: 'success',\r\n          timer: 1500,\r\n          showConfirmButton: false\r\n        });\r\n        this.selectedFile = null;\r\n        this.router.navigate(['/']); \r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"main-w3layouts wrapper\">\r\n    <h3>Create a post!</h3>\r\n    <div class=\"main-agileinfo\">\r\n        <div class=\"agileits-top\">\r\n            <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n                <div>\r\n                  <label for=\"content\">Content:</label>\r\n                  <textarea formControlName=\"content\" id=\"content\" placeholder=\"Write your post here...\" required></textarea>\r\n                  <input type=\"file\" formControlName=\"image\" class=\"a\" (change)=\"onFileSelected($event)\" />\r\n                </div>\r\n                <input type=\"submit\" value=\"POST NOW\">\r\n              </form>\r\n        </div>\r\n    </div>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}