{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { Component } from '@angular/core';\nexport let DashboardComponent = class DashboardComponent {\n  constructor(http) {\n    this.http = http;\n    this.message = \"\";\n    this.token = null;\n    this.authenticated = false;\n    this.posts = [];\n  }\n  ngOnInit() {\n    this.token = localStorage.getItem('token');\n    if (this.token) {\n      this.authenticated = true;\n      const fn = localStorage.getItem('firstname');\n      const ln = localStorage.getItem('lastname');\n      this.message = `${fn} ${ln}'s newsfeed`; // Improved string formatting\n      this.fetchPosts();\n    }\n  }\n  fetchPosts() {\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${this.token}`);\n    this.http.get('http://localhost:9000/user/post', {\n      headers: headers\n    }).subscribe(posts => {\n      this.posts = posts;\n    }, error => {\n      console.error('Error fetching posts:', error);\n    });\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);","map":{"version":3,"names":["HttpHeaders","Component","DashboardComponent","constructor","http","message","token","authenticated","posts","ngOnInit","localStorage","getItem","fn","ln","fetchPosts","headers","set","get","subscribe","error","console","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\HP\\Desktop\\cpp\\new\\distributed_system\\front-end\\src\\app\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  message: string = \"\";\n  token: string | null = null;\n  authenticated = false;\n  posts: any[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {\n    this.token = localStorage.getItem('token');\n\n    if (this.token) {\n      this.authenticated = true;\n      const fn = localStorage.getItem('firstname');\n      const ln = localStorage.getItem('lastname');\n      this.message = `${fn} ${ln}'s newsfeed`; // Improved string formatting\n      this.fetchPosts();\n    }\n  }\n\n  fetchPosts(): void {\n    const headers= new HttpHeaders().set('Authorization', `Bearer ${this.token}`);\n    this.http.get<any>('http://localhost:9000/user/post', { headers: headers }).subscribe(\n      (posts) => {\n        this.posts = posts;\n      },\n      (error) => {\n        console.error('Error fetching posts:', error);\n      }\n    );\n  }\n}\n"],"mappings":";AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAASC,SAAS,QAAgB,eAAe;AAO1C,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAM7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IALxB,KAAAC,OAAO,GAAW,EAAE;IACpB,KAAAC,KAAK,GAAkB,IAAI;IAC3B,KAAAC,aAAa,GAAG,KAAK;IACrB,KAAAC,KAAK,GAAU,EAAE;EAEsB;EAEvCC,QAAQA,CAAA;IACN,IAAI,CAACH,KAAK,GAAGI,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE1C,IAAI,IAAI,CAACL,KAAK,EAAE;MACd,IAAI,CAACC,aAAa,GAAG,IAAI;MACzB,MAAMK,EAAE,GAAGF,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC5C,MAAME,EAAE,GAAGH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MAC3C,IAAI,CAACN,OAAO,GAAG,GAAGO,EAAE,IAAIC,EAAE,aAAa,CAAC,CAAC;MACzC,IAAI,CAACC,UAAU,EAAE;;EAErB;EAEAA,UAAUA,CAAA;IACR,MAAMC,OAAO,GAAE,IAAIf,WAAW,EAAE,CAACgB,GAAG,CAAC,eAAe,EAAE,UAAU,IAAI,CAACV,KAAK,EAAE,CAAC;IAC7E,IAAI,CAACF,IAAI,CAACa,GAAG,CAAM,iCAAiC,EAAE;MAAEF,OAAO,EAAEA;IAAO,CAAE,CAAC,CAACG,SAAS,CAClFV,KAAK,IAAI;MACR,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,EACAW,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CACF;EACH;CACD;AA/BYjB,kBAAkB,GAAAmB,UAAA,EAL9BpB,SAAS,CAAC;EACTqB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWtB,kBAAkB,CA+B9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}