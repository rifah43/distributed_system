{"ast":null,"code":"import axios from 'axios';\nimport { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let NotificationService = /*#__PURE__*/(() => {\n  var _class;\n  class NotificationService {\n    constructor() {\n      this.baseURL = 'http://localhost/notification';\n    }\n    getNotifications(headers) {\n      return new Observable(observer => {\n        axios.get(this.baseURL, {\n          headers: headers\n        }).then(response => {\n          observer.next(response.data);\n          observer.complete();\n        }).catch(error => {\n          observer.error(error);\n          observer.complete();\n        });\n      });\n    }\n    deleteNotification(notificationId, headers) {\n      return new Observable(observer => {\n        axios.delete(`${this.baseURL}/${notificationId}`, {\n          headers: headers\n        }).then(response => {\n          observer.next(response.data);\n          observer.complete();\n        }).catch(error => {\n          observer.error(error);\n          observer.complete();\n        });\n      });\n    }\n  }\n  _class = NotificationService;\n  _class.ɵfac = function NotificationService_Factory(t) {\n    return new (t || _class)();\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac,\n    providedIn: 'root'\n  });\n  return NotificationService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}