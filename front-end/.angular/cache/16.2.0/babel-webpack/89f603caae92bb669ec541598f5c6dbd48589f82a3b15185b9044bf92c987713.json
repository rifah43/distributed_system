{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http'; // Import HttpHeaders\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../notification.service\";\nexport class NotificationComponent {\n  constructor(router, notificationService) {\n    this.router = router;\n    this.notificationService = notificationService;\n    this.notifications = [];\n    this.jwtToken = null;\n  }\n  ngOnInit() {\n    this.jwtToken = localStorage.getItem('token');\n    if (this.jwtToken) {\n      this.fetchNotifications();\n    }\n  }\n  fetchNotifications() {\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${this.jwtToken}`\n    });\n    this.notificationService.getNotifications(headers).subscribe(notifications => {\n      this.notifications = notifications;\n      console.log(this.notifications);\n    }, error => {\n      console.error('Error fetching notifications:', error);\n    });\n  }\n  deleteNotification(notificationId) {\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${this.jwtToken}`\n    });\n    this.notificationService.deleteNotification(notificationId, headers).subscribe(() => {\n      this.fetchNotifications();\n    }, error => {\n      console.error('Error deleting notification:', error);\n    });\n  }\n}\n_class = NotificationComponent;\n_class.ɵfac = function NotificationComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.NotificationService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-notification\"]],\n  decls: 1,\n  vars: 0,\n  template: function NotificationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\");\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["HttpHeaders","NotificationComponent","constructor","router","notificationService","notifications","jwtToken","ngOnInit","localStorage","getItem","fetchNotifications","headers","Authorization","getNotifications","subscribe","console","log","error","deleteNotification","notificationId","i0","ɵɵdirectiveInject","i1","Router","i2","NotificationService","selectors","decls","vars","template","NotificationComponent_Template","rf","ctx","ɵɵelement"],"sources":["C:\\Users\\HP\\Desktop\\cpp\\new\\distributed_system\\front-end\\src\\app\\notification\\notification.component.ts","C:\\Users\\HP\\Desktop\\cpp\\new\\distributed_system\\front-end\\src\\app\\notification\\notification.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpHeaders } from '@angular/common/http'; // Import HttpHeaders\nimport { NotificationService } from '../notification.service';\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.css'],\n})\nexport class NotificationComponent implements OnInit {\n  notifications: any[] = [];\n  jwtToken: string | null = null;\n  constructor(private router: Router, private notificationService: NotificationService) {}\n\n  ngOnInit(): void {\n    this.jwtToken = localStorage.getItem('token')\n    if(this.jwtToken){\n      this.fetchNotifications();\n    }\n  }\n\n  fetchNotifications() {\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${this.jwtToken}`\n    });\n\n    this.notificationService.getNotifications(headers).subscribe(\n      (notifications: any) => {\n        this.notifications = notifications;\n        console.log(this.notifications);\n      },\n      (error: any) => {\n        console.error('Error fetching notifications:', error);\n      }\n    );\n  }\n\n  deleteNotification(notificationId: string) {\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${this.jwtToken}`\n    });\n\n    this.notificationService.deleteNotification(notificationId, headers).subscribe(\n      () => { \n        this.fetchNotifications(); \n      },\n      (error: any) => {\n        console.error('Error deleting notification:', error);\n      }\n    );\n  }\n}\n","<div>\n  \n</div>\n  "],"mappings":";AAEA,SAASA,WAAW,QAAQ,sBAAsB,CAAC,CAAC;;;;AAQpD,OAAM,MAAOC,qBAAqB;EAGhCC,YAAoBC,MAAc,EAAUC,mBAAwC;IAAhE,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,mBAAmB,GAAnBA,mBAAmB;IAF/D,KAAAC,aAAa,GAAU,EAAE;IACzB,KAAAC,QAAQ,GAAkB,IAAI;EACyD;EAEvFC,QAAQA,CAAA;IACN,IAAI,CAACD,QAAQ,GAAGE,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC7C,IAAG,IAAI,CAACH,QAAQ,EAAC;MACf,IAAI,CAACI,kBAAkB,EAAE;;EAE7B;EAEAA,kBAAkBA,CAAA;IAChB,MAAMC,OAAO,GAAG,IAAIX,WAAW,CAAC;MAC9BY,aAAa,EAAE,UAAU,IAAI,CAACN,QAAQ;KACvC,CAAC;IAEF,IAAI,CAACF,mBAAmB,CAACS,gBAAgB,CAACF,OAAO,CAAC,CAACG,SAAS,CACzDT,aAAkB,IAAI;MACrB,IAAI,CAACA,aAAa,GAAGA,aAAa;MAClCU,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,aAAa,CAAC;IACjC,CAAC,EACAY,KAAU,IAAI;MACbF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,CACF;EACH;EAEAC,kBAAkBA,CAACC,cAAsB;IACvC,MAAMR,OAAO,GAAG,IAAIX,WAAW,CAAC;MAC9BY,aAAa,EAAE,UAAU,IAAI,CAACN,QAAQ;KACvC,CAAC;IAEF,IAAI,CAACF,mBAAmB,CAACc,kBAAkB,CAACC,cAAc,EAAER,OAAO,CAAC,CAACG,SAAS,CAC5E,MAAK;MACH,IAAI,CAACJ,kBAAkB,EAAE;IAC3B,CAAC,EACAO,KAAU,IAAI;MACbF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CACF;EACH;;SAzCWhB,qBAAqB;;mBAArBA,MAAqB,EAAAmB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,mBAAA;AAAA;;QAArBxB,MAAqB;EAAAyB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCVlCX,EAAA,CAAAa,SAAA,UAEM"},"metadata":{},"sourceType":"module","externalDependencies":[]}