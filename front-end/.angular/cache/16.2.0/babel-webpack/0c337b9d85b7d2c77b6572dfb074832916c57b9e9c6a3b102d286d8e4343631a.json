{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport swal from 'sweetalert2';\nexport let PostComponent = class PostComponent {\n  constructor(formbuilder, http, router) {\n    this.formbuilder = formbuilder;\n    this.http = http;\n    this.router = router;\n    this.authenticated = false;\n    this.selectedFile = null;\n    this.jwtToken = null;\n    this.post = {\n      content: '',\n      image: ''\n    };\n  }\n  ngOnInit() {\n    this.jwtToken = localStorage.getItem('token');\n    if (!this.jwtToken) {\n      this.router.navigate(['/login']);\n    }\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  submit() {\n    if (!this.jwtToken) {\n      swal.fire('Error!', 'Please log in to create a post.', 'error');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('content', this.post.content);\n    const content = this.post.content;\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${this.jwtToken}`\n    });\n    if (this.selectedFile) {\n      formData.append('image', this.selectedFile, this.selectedFile.name);\n      const image = this.post.image;\n      if (!content && !image) {\n        swal.fire('Error!', 'Please provide either post content or an image.', 'error');\n        return;\n      }\n      this.http.post('http://localhost:9200/user/post', formData, {\n        headers: headers\n      }).subscribe(response => {\n        console.log(response);\n        this.post.content = '';\n        this.post.image = '';\n        swal.fire({\n          title: 'Success!',\n          text: response.message,\n          icon: 'success',\n          timer: 1500,\n          showConfirmButton: false\n        });\n        this.selectedFile = null;\n        this.router.navigate(['/']);\n      }, error => {\n        console.error(error);\n      });\n    } else {\n      if (!content) {\n        swal.fire('Error!', 'Please provide either post content or an image.', 'error');\n        return;\n      }\n      this.http.post('http://localhost:9200/user/post', formData, {\n        headers: headers\n      }).subscribe(response => {\n        console.log(response);\n        this.post.content = '';\n        swal.fire({\n          title: 'Success!',\n          text: response.message,\n          icon: 'success',\n          timer: 1500,\n          showConfirmButton: false\n        });\n        this.selectedFile = null;\n        this.router.navigate(['/']);\n      }, error => {\n        console.error(error);\n      });\n    }\n  }\n};\nPostComponent = __decorate([Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})], PostComponent);","map":{"version":3,"names":["HttpHeaders","Component","swal","PostComponent","constructor","formbuilder","http","router","authenticated","selectedFile","jwtToken","post","content","image","ngOnInit","localStorage","getItem","navigate","onFileSelected","event","target","files","submit","fire","formData","FormData","append","headers","Authorization","name","subscribe","response","console","log","title","text","message","icon","timer","showConfirmButton","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\HP\\Desktop\\cpp\\new\\distributed_system\\front-end\\src\\app\\post\\post.component.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n  authenticated = false;\n  selectedFile: File | null = null;\n  jwtToken: string | null = null;\n  post = {\n    content: '',\n    image:''\n  };\n\n  constructor(private formbuilder: FormBuilder, private http: HttpClient, private router:Router) {}\n\n  ngOnInit(): void {\n    this.jwtToken = localStorage.getItem('token')\n\n    if(!this.jwtToken){\n      this.router.navigate(['/login']); \n    }\n  }\n\n  onFileSelected(event: any) {\n    this.selectedFile = event.target.files[0];\n  }\n\n  submit(): void {\n    if (!this.jwtToken) {\n      swal.fire('Error!', 'Please log in to create a post.', 'error');\n      return;\n    }\n    const formData = new FormData();\n      formData.append('content', this.post.content);\n      const content=this.post.content;\n\n      const headers = new HttpHeaders({\n        Authorization: `Bearer ${this.jwtToken}`\n      });\n\n\n    if (this.selectedFile) {\n      formData.append('image', this.selectedFile, this.selectedFile.name);\n      const image=this.post.image;\n\n      if (!content && !image) {\n        swal.fire('Error!', 'Please provide either post content or an image.', 'error');\n        return;\n      }\n      this.http.post<any>('http://localhost:9200/user/post', formData, {\n        headers: headers\n      }).subscribe(\n      (response) => {\n        console.log(response);\n        this.post.content='';\n        this.post.image= '';\n        swal.fire({\n          title: 'Success!',\n          text: response.message,\n          icon: 'success',\n          timer: 1500,\n          showConfirmButton: false\n        });\n        this.selectedFile = null;\n        this.router.navigate(['/']); \n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n  else{\n      if (!content) {\n        swal.fire('Error!', 'Please provide either post content or an image.', 'error');\n        return;\n      }\n      this.http.post<any>('http://localhost:9200/user/post', formData, {\n        headers: headers\n      }).subscribe(\n      (response) => {\n        console.log(response);\n        this.post.content='';\n        swal.fire({\n          title: 'Success!',\n          text: response.message,\n          icon: 'success',\n          timer: 1500,\n          showConfirmButton: false\n        });\n        this.selectedFile = null;\n        this.router.navigate(['/']); \n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}