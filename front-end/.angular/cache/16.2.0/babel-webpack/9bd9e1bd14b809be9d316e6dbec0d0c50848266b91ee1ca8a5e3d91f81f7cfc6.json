{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport swal from 'sweetalert2';\nexport let LoginComponent = class LoginComponent {\n  constructor(formbuilder, http, router) {\n    this.formbuilder = formbuilder;\n    this.http = http;\n    this.router = router;\n    this.authenticated = false;\n    this.token = null;\n  }\n  ngOnInit() {\n    this.token = localStorage.getItem('token');\n    if (this.token) {\n      this.authenticated = true;\n    }\n    this.form = this.formbuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  submit() {\n    if (this.form.invalid) {\n      swal.fire('Error!', 'Please fill out all fields.', 'error');\n      return;\n    }\n    const user = this.form.getRawValue();\n    this.http.post(\"http://localhost:9200/user/login\", user, {\n      withCredentials: true\n    }).subscribe(response => {\n      console.log(response);\n      const successMessage = response.message;\n      localStorage.setItem(\"token\", response.token);\n      localStorage.setItem(\"firstname\", response.firstname);\n      localStorage.setItem(\"lastname\", response.lastname);\n      localStorage.setItem(\"email\", response.email);\n      swal.fire({\n        title: 'Success!',\n        text: successMessage,\n        icon: 'success',\n        timer: 1500,\n        showConfirmButton: false\n      });\n      this.router.navigate(['/']);\n    }, err => {\n      console.error(\"Login error:\", err);\n      swal.fire('Error!', err.error?.message, 'error');\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css', '../../styles.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","Validators","swal","LoginComponent","constructor","formbuilder","http","router","authenticated","token","ngOnInit","localStorage","getItem","form","group","email","required","password","submit","invalid","fire","user","getRawValue","post","withCredentials","subscribe","response","console","log","successMessage","message","setItem","firstname","lastname","title","text","icon","timer","showConfirmButton","navigate","err","error","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/rifahtashfihafaria/Desktop/distributed_system/front-end/src/app/login/login.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css','../../styles.css']\n})\nexport class LoginComponent implements OnInit{\n  form:FormGroup\n  authenticated = false;\n  token: string | null = null;\n\n  constructor(private formbuilder:FormBuilder, private http:HttpClient, private router:Router){}\n\n  ngOnInit():void{\n    this.token = localStorage.getItem('token');\n\n    if (this.token) {\n      this.authenticated = true;\n    }\n    this.form = this.formbuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  submit(): void {\n    if (this.form.invalid) {\n      swal.fire('Error!', 'Please fill out all fields.', 'error');\n      return;\n    }\n\n    const user = this.form.getRawValue();\n\n    this.http.post(\"http://localhost:9200/user/login\", user, {\n      withCredentials: true\n    })\n    .subscribe(\n      (response: any) => {\n        console.log(response);\n        const successMessage = response.message; \n        localStorage.setItem(\"token\", response.token);\n        localStorage.setItem(\"firstname\", response.firstname);\n        localStorage.setItem(\"lastname\", response.lastname);\n        localStorage.setItem(\"email\", response.email);\n        swal.fire({\n          title: 'Success!',\n          text: successMessage,\n          icon: 'success',\n          timer: 1500,\n          showConfirmButton: false\n        });\n        this.router.navigate(['/']); \n      },\n      (err: any) => {\n        console.error(\"Login error:\", err);\n        swal.fire('Error!', err.error?.message, 'error');\n      });\n    }\n}"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAEnE,OAAOC,IAAI,MAAM,aAAa;AAOvB,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAKzBC,YAAoBC,WAAuB,EAAUC,IAAe,EAAUC,MAAa;IAAvE,KAAAF,WAAW,GAAXA,WAAW;IAAsB,KAAAC,IAAI,GAAJA,IAAI;IAAqB,KAAAC,MAAM,GAANA,MAAM;IAHpF,KAAAC,aAAa,GAAG,KAAK;IACrB,KAAAC,KAAK,GAAkB,IAAI;EAEkE;EAE7FC,QAAQA,CAAA;IACN,IAAI,CAACD,KAAK,GAAGE,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE1C,IAAI,IAAI,CAACH,KAAK,EAAE;MACd,IAAI,CAACD,aAAa,GAAG,IAAI;;IAE3B,IAAI,CAACK,IAAI,GAAG,IAAI,CAACR,WAAW,CAACS,KAAK,CAAC;MACjCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACd,UAAU,CAACe,QAAQ,EAAEf,UAAU,CAACc,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACe,QAAQ;KACnC,CAAC;EACJ;EAEAE,MAAMA,CAAA;IACJ,IAAI,IAAI,CAACL,IAAI,CAACM,OAAO,EAAE;MACrBjB,IAAI,CAACkB,IAAI,CAAC,QAAQ,EAAE,6BAA6B,EAAE,OAAO,CAAC;MAC3D;;IAGF,MAAMC,IAAI,GAAG,IAAI,CAACR,IAAI,CAACS,WAAW,EAAE;IAEpC,IAAI,CAAChB,IAAI,CAACiB,IAAI,CAAC,kCAAkC,EAAEF,IAAI,EAAE;MACvDG,eAAe,EAAE;KAClB,CAAC,CACDC,SAAS,CACPC,QAAa,IAAI;MAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,MAAMG,cAAc,GAAGH,QAAQ,CAACI,OAAO;MACvCnB,YAAY,CAACoB,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACjB,KAAK,CAAC;MAC7CE,YAAY,CAACoB,OAAO,CAAC,WAAW,EAAEL,QAAQ,CAACM,SAAS,CAAC;MACrDrB,YAAY,CAACoB,OAAO,CAAC,UAAU,EAAEL,QAAQ,CAACO,QAAQ,CAAC;MACnDtB,YAAY,CAACoB,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACX,KAAK,CAAC;MAC7Cb,IAAI,CAACkB,IAAI,CAAC;QACRc,KAAK,EAAE,UAAU;QACjBC,IAAI,EAAEN,cAAc;QACpBO,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,IAAI;QACXC,iBAAiB,EAAE;OACpB,CAAC;MACF,IAAI,CAAC/B,MAAM,CAACgC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC,EACAC,GAAQ,IAAI;MACXb,OAAO,CAACc,KAAK,CAAC,cAAc,EAAED,GAAG,CAAC;MAClCtC,IAAI,CAACkB,IAAI,CAAC,QAAQ,EAAEoB,GAAG,CAACC,KAAK,EAAEX,OAAO,EAAE,OAAO,CAAC;IAClD,CAAC,CAAC;EACJ;CACH;AApDY3B,cAAc,GAAAuC,UAAA,EAL1B1C,SAAS,CAAC;EACT2C,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB,EAAC,kBAAkB;CACvD,CAAC,C,EACW1C,cAAc,CAoD1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}