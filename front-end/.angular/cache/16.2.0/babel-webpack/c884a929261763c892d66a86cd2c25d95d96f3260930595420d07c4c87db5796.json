{"ast":null,"code":"var _class;\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class Emitters {\n  constructor() {\n    this.authState = new BehaviorSubject(false);\n    this.authEmitter = this.authState.asObservable();\n  }\n  updateAuthState(auth) {\n    this.authState.next(auth);\n  }\n}\n_class = Emitters;\n_class.ɵfac = function Emitters_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","Emitters","constructor","authState","authEmitter","asObservable","updateAuthState","auth","next","factory","ɵfac","providedIn"],"sources":["C:\\Users\\HP\\Desktop\\cpp\\new\\distributed_system\\front-end\\src\\app\\emitters\\emitter.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Emitters {\r\n  private authState = new BehaviorSubject<boolean>(false);\r\n  authEmitter = this.authState.asObservable();\r\n  static authEmitter: any;\r\n\r\n  updateAuthState(auth: boolean) {\r\n    this.authState.next(auth);\r\n  }\r\n}\r\n"],"mappings":";AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,QAAQ;EAHrBC,YAAA;IAIU,KAAAC,SAAS,GAAG,IAAIH,eAAe,CAAU,KAAK,CAAC;IACvD,KAAAI,WAAW,GAAG,IAAI,CAACD,SAAS,CAACE,YAAY,EAAE;;EAG3CC,eAAeA,CAACC,IAAa;IAC3B,IAAI,CAACJ,SAAS,CAACK,IAAI,CAACD,IAAI,CAAC;EAC3B;;SAPWN,QAAQ;;mBAARA,MAAQ;AAAA;;SAARA,MAAQ;EAAAQ,OAAA,EAARR,MAAQ,CAAAS,IAAA;EAAAC,UAAA,EAFP;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}