{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport swal from 'sweetalert2';\nexport let PostComponent = class PostComponent {\n  constructor(formbuilder, http, router) {\n    this.formbuilder = formbuilder;\n    this.http = http;\n    this.router = router;\n    this.authenticated = false;\n    this.selectedFile = null;\n    this.jwtToken = null;\n  }\n  ngOnInit() {\n    this.jwtToken = localStorage.getItem('token');\n    if (this.jwtToken) {\n      this.form = this.formbuilder.group({\n        content: [''],\n        image: ['']\n      });\n    } else {\n      this.router.navigate(['/login']);\n    }\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  submit() {\n    if (!this.jwtToken) {\n      swal.fire('Error!', 'Please log in to create a post.', 'error');\n      return;\n    }\n    const content = this.form.get('content')?.value;\n    const image = this.selectedFile;\n    if (!content && !image) {\n      swal.fire('Error!', 'Please provide either post content or an image.', 'error');\n      return;\n    }\n    const post = this.form.getRawValue();\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${this.jwtToken}`\n    });\n    if (image) {\n      post.image = this.selectedFile;\n      this.http.post('http://localhost:9000/user/post', post, {\n        headers: headers\n      }).subscribe(response => {\n        console.log(response);\n        this.form.reset();\n        swal.fire({\n          title: 'Success!',\n          text: response.message,\n          icon: 'success',\n          timer: 1500,\n          showConfirmButton: false\n        });\n        this.selectedFile = null;\n      }, error => {\n        console.error(error);\n      });\n    } else {\n      console.log(headers);\n      this.http.post('http://localhost:9000/user/post', post, {\n        headers: headers\n      }).subscribe(response => {\n        swal.fire({\n          title: 'Success!',\n          text: response.message,\n          icon: 'success',\n          timer: 1500,\n          showConfirmButton: false\n        });\n        this.form.reset();\n      });\n    }\n  }\n};\nPostComponent = __decorate([Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})], PostComponent);","map":{"version":3,"names":["HttpHeaders","Component","swal","PostComponent","constructor","formbuilder","http","router","authenticated","selectedFile","jwtToken","ngOnInit","localStorage","getItem","form","group","content","image","navigate","onFileSelected","event","target","files","submit","fire","get","value","post","getRawValue","headers","Authorization","subscribe","response","console","log","reset","title","text","message","icon","timer","showConfirmButton","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\HP\\Desktop\\cpp\\new\\distributed_system\\front-end\\src\\app\\post\\post.component.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n  form: FormGroup;\n  authenticated = false;\n  selectedFile: File | null = null;\n  jwtToken: string | null = null;\n\n  constructor(private formbuilder: FormBuilder, private http: HttpClient, private router:R) {}\n\n  ngOnInit(): void {\n    this.jwtToken = localStorage.getItem('token')\n\n    if(this.jwtToken){\n    this.form = this.formbuilder.group({\n      content: [''],\n      image: [''],\n    });\n  }\n  else{\n    this.router.navigate(['/login']); \n  }\n  }\n\n  onFileSelected(event: any) {\n    this.selectedFile = event.target.files[0];\n  }\n\n  submit(): void {\n    if (!this.jwtToken) {\n      swal.fire('Error!', 'Please log in to create a post.', 'error');\n      return;\n    }\n\n    const content = this.form.get('content')?.value;\n    const image = this.selectedFile;\n\n    if (!content && !image) {\n      swal.fire('Error!', 'Please provide either post content or an image.', 'error');\n      return;\n    }\n\n    const post = this.form.getRawValue();\n\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${this.jwtToken}`\n    });\n\n    if (image) {\n      post.image = this.selectedFile;\n\n      this.http.post<any>('http://localhost:9000/user/post', post, {\n        headers: headers\n      }).subscribe(\n        (response) => {\n          console.log(response);\n          this.form.reset();\n          swal.fire({\n            title: 'Success!',\n            text: response.message,\n            icon: 'success',\n            timer: 1500,\n            showConfirmButton: false\n          });\n          this.selectedFile = null;\n        },\n        (error) => {\n          console.error(error);\n        }\n      );\n    } else {\n      console.log(headers);\n      this.http.post('http://localhost:9000/user/post', post, {\n        headers: headers\n      }).subscribe(\n        (response: any) => {\n          swal.fire({\n            title: 'Success!',\n            text: response.message,\n            icon: 'success',\n            timer: 1500,\n            showConfirmButton: false\n          });\n          this.form.reset();\n        }\n      );\n    }\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}