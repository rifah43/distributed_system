{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class NotificationService {\n  constructor(http) {\n    this.http = http;\n  }\n  getNotifications() {\n    return this.http.get('/user/notification');\n  }\n  deleteNotification(notificationId) {\n    return this.http.delete(`/user/notification/${notificationId}`);\n  }\n}\n_class = NotificationService;\n_class.ɵfac = function NotificationService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["NotificationService","constructor","http","getNotifications","get","deleteNotification","notificationId","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\HP\\Desktop\\cpp\\new\\distributed_system\\front-end\\src\\app\\notification.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotificationService {\n  constructor(private http: HttpClient) {}\n\n  getNotifications(): Observable<any[]> {\n    return this.http.get<any[]>('/user/notification'); \n  }\n\n  deleteNotification(notificationId: string): Observable<any> {\n    return this.http.delete(`/user/notification/${notificationId}`);\n  }\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,mBAAmB;EAC9BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAQ,oBAAoB,CAAC;EACnD;EAEAC,kBAAkBA,CAACC,cAAsB;IACvC,OAAO,IAAI,CAACJ,IAAI,CAACK,MAAM,CAAC,sBAAsBD,cAAc,EAAE,CAAC;EACjE;;SATWN,mBAAmB;;mBAAnBA,MAAmB,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAnBX,MAAmB;EAAAY,OAAA,EAAnBZ,MAAmB,CAAAa,IAAA;EAAAC,UAAA,EAFlB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}