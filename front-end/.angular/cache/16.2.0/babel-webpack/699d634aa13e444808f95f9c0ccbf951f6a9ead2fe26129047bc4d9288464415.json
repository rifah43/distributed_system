{"ast":null,"code":"var _class;\nimport swal from 'sweetalert2';\nimport { Emitters } from '../emitters/emitter';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nexport class PostComponent {\n  constructor(formbuilder, http) {\n    this.formbuilder = formbuilder;\n    this.http = http;\n    this.authenticated = false;\n    this.initialAuthChecked = false;\n    this.selectedFile = null;\n  }\n  ngOnInit() {\n    this.form = this.formbuilder.group({\n      content: [''],\n      image: ['']\n    });\n  }\n  ngAfterViewInit() {\n    this.authSubscription = Emitters.authEmitter.subscribe(auth => {\n      console.log('authEmitter emitted:', auth);\n      this.authenticated = auth;\n      console.log('authEmitter:', this.authenticated);\n      if (!this.initialAuthChecked) {\n        this.initialAuthChecked = true;\n        this.submit();\n      }\n    });\n  }\n  ngOnDestroy() {\n    if (this.authSubscription) {\n      this.authSubscription.unsubscribe();\n    }\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  submit() {\n    console.log('Authenticated:', this.authenticated);\n    if (!this.authenticated) {\n      swal.fire('Error!', 'Please log in to create a post.', 'error');\n      return;\n    }\n    const content = this.form.get('content')?.value;\n    const image = this.selectedFile;\n    if (!content && !image) {\n      swal.fire('Error!', 'Please provide either post content or an image.', 'error');\n      return;\n    }\n    const post = this.form.getRawValue();\n    if (image) {\n      post.image = this.selectedFile;\n      this.http.post('http://localhost:9000/user/post', post).subscribe(response => {\n        console.log(response);\n        this.form.reset();\n        this.selectedFile = null;\n      }, error => {\n        console.error(error);\n      });\n    } else {\n      this.http.post('http://localhost:9000/user/post', post).subscribe(response => {\n        console.log(response);\n        this.form.reset();\n      });\n    }\n  }\n}\n_class = PostComponent;\n_class.ɵfac = function PostComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-post\"]],\n  decls: 12,\n  vars: 1,\n  consts: [[1, \"main-w3layouts\", \"wrapper\"], [1, \"main-agileinfo\"], [1, \"agileits-top\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"content\"], [\"formControlName\", \"content\", \"id\", \"content\", \"placeholder\", \"Write your post here...\", \"required\", \"\"], [\"type\", \"file\", \"formControlName\", \"image\", 1, \"a\", 3, \"change\"], [\"type\", \"submit\", \"value\", \"POST\"]],\n  template: function PostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n      i0.ɵɵtext(2, \"Create a post!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function PostComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(6, \"div\")(7, \"label\", 4);\n      i0.ɵɵtext(8, \"Content:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"textarea\", 5);\n      i0.ɵɵelementStart(10, \"input\", 6);\n      i0.ɵɵlistener(\"change\", function PostComponent_Template_input_change_10_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(11, \"input\", 7);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["swal","Emitters","PostComponent","constructor","formbuilder","http","authenticated","initialAuthChecked","selectedFile","ngOnInit","form","group","content","image","ngAfterViewInit","authSubscription","authEmitter","subscribe","auth","console","log","submit","ngOnDestroy","unsubscribe","onFileSelected","event","target","files","fire","get","value","post","getRawValue","response","reset","error","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","selectors","decls","vars","consts","template","PostComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PostComponent_Template_form_ngSubmit_5_listener","ɵɵelement","PostComponent_Template_input_change_10_listener","$event","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\HP\\Desktop\\cpp\\new\\distributed_system\\front-end\\src\\app\\post\\post.component.ts","C:\\Users\\HP\\Desktop\\cpp\\new\\distributed_system\\front-end\\src\\app\\post\\post.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport swal from 'sweetalert2';\nimport { Emitters } from '../emitters/emitter';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit, AfterViewInit, OnDestroy {\n  form: FormGroup;\n  authenticated = false;\n  initialAuthChecked = false; \n  selectedFile: File | null = null;\n\n  private authSubscription: Subscription; // Store the subscription\n\n  constructor(private formbuilder: FormBuilder, private http: HttpClient) {}\n\n  ngOnInit(): void {\n    this.form = this.formbuilder.group({\n      content: [''],\n      image: [''],\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.authSubscription = Emitters.authEmitter.subscribe((auth: boolean) => {\n      console.log('authEmitter emitted:', auth);\n      this.authenticated = auth;\n      console.log('authEmitter:', this.authenticated);\n      if (!this.initialAuthChecked) {\n        this.initialAuthChecked = true;\n        this.submit();\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.authSubscription) {\n      this.authSubscription.unsubscribe();\n    }\n  }\n\n  onFileSelected(event: any) {\n    this.selectedFile = event.target.files[0];\n  }\n\n  submit(): void {\n    console.log('Authenticated:', this.authenticated);\n    if (!this.authenticated) {\n      swal.fire('Error!', 'Please log in to create a post.', 'error');\n      return;\n    }\n\n    const content = this.form.get('content')?.value;\n    const image = this.selectedFile;\n\n    if (!content && !image) {\n      swal.fire('Error!', 'Please provide either post content or an image.', 'error');\n      return;\n    }\n\n    const post = this.form.getRawValue();\n\n    if (image) {\n      post.image = this.selectedFile;\n\n      this.http.post<any>('http://localhost:9000/user/post', post).subscribe(\n        (response) => {\n          console.log(response);\n          this.form.reset();\n          this.selectedFile = null;\n        },\n        (error) => {\n          console.error(error);\n        }\n      );\n    } else {\n      this.http.post('http://localhost:9000/user/post', post).subscribe(\n        (response: any) => {\n          console.log(response);\n          this.form.reset();\n        }\n      );\n    }\n  }\n}\n","<div class=\"main-w3layouts wrapper\">\n    <h3>Create a post!</h3>\n    <div class=\"main-agileinfo\">\n        <div class=\"agileits-top\">\n            <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n                <div>\n                  <label for=\"content\">Content:</label>\n                  <textarea formControlName=\"content\" id=\"content\" placeholder=\"Write your post here...\" required></textarea>\n                  <input type=\"file\" formControlName=\"image\" class=\"a\" (change)=\"onFileSelected($event)\" />\n                </div>\n                <input type=\"submit\" value=\"POST\">\n              </form>\n        </div>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}