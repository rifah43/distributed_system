{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nexport class PostComponent {\n  constructor(formbuilder, http, router) {\n    this.formbuilder = formbuilder;\n    this.http = http;\n    this.router = router;\n    this.authenticated = false;\n    this.selectedFile = null;\n    this.jwtToken = null;\n    this.post = {\n      content: '',\n      image: ''\n    };\n  }\n  ngOnInit() {\n    this.jwtToken = localStorage.getItem('token');\n    if (!this.jwtToken) {\n      this.router.navigate(['/login']);\n    }\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  submit() {\n    if (!this.jwtToken) {\n      swal.fire('Error!', 'Please log in to create a post.', 'error');\n      return;\n    }\n    const content = this.post.content;\n    const image = this.selectedFile;\n    if (!content && !image) {\n      swal.fire('Error!', 'Please provide either post content or an image.', 'error');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('content', content);\n    if (image) {\n      formData.append('image', image, image.name);\n    }\n    console.log(formData);\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${this.jwtToken}`\n    });\n    this.http.post('http://localhost:9200/user/post', formData, {\n      headers: headers\n    }).subscribe(response => {\n      // Log the content of formData after the request completes\n      console.log('Form Data Content:', formData.get('content'));\n      console.log('Form Data Image:', formData.get('image'));\n      this.post.content = ''; // Reset content\n      this.selectedFile = null; // Reset selectedFile\n      swal.fire({\n        title: 'Success!',\n        text: response.message,\n        icon: 'success',\n        timer: 1500,\n        showConfirmButton: false\n      });\n      this.router.navigate(['/']);\n    }, error => {\n      console.error(error);\n    });\n  }\n}\n_class = PostComponent;\n_class.ɵfac = function PostComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-post\"]],\n  decls: 12,\n  vars: 1,\n  consts: [[1, \"main-w3layouts\", \"wrapper\"], [1, \"main-agileinfo\"], [1, \"agileits-top\"], [3, \"ngSubmit\"], [\"for\", \"content\"], [\"id\", \"content\", \"name\", \"content\", \"placeholder\", \"Write your post here...\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"file\", \"name\", \"image\", 1, \"a\", 3, \"change\"], [\"type\", \"submit\", \"value\", \"POST\"]],\n  template: function PostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n      i0.ɵɵtext(2, \"Create a post!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function PostComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(6, \"div\")(7, \"label\", 4);\n      i0.ɵɵtext(8, \"Content:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"textarea\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function PostComponent_Template_textarea_ngModelChange_9_listener($event) {\n        return ctx.post.content = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 6);\n      i0.ɵɵlistener(\"change\", function PostComponent_Template_input_change_10_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(11, \"input\", 7);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.post.content);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i1.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["HttpHeaders","swal","PostComponent","constructor","formbuilder","http","router","authenticated","selectedFile","jwtToken","post","content","image","ngOnInit","localStorage","getItem","navigate","onFileSelected","event","target","files","submit","fire","formData","FormData","append","name","console","log","headers","Authorization","subscribe","response","get","title","text","message","icon","timer","showConfirmButton","error","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","selectors","decls","vars","consts","template","PostComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PostComponent_Template_form_ngSubmit_5_listener","PostComponent_Template_textarea_ngModelChange_9_listener","$event","PostComponent_Template_input_change_10_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\HP\\Desktop\\cpp\\new\\distributed_system\\front-end\\src\\app\\post\\post.component.ts","C:\\Users\\HP\\Desktop\\cpp\\new\\distributed_system\\front-end\\src\\app\\post\\post.component.html"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n  authenticated = false;\n  selectedFile: File | null = null;\n  jwtToken: string | null = null;\n  post = {\n    content: '',\n    image:''\n  };\n\n  constructor(private formbuilder: FormBuilder, private http: HttpClient, private router:Router) {}\n\n  ngOnInit(): void {\n    this.jwtToken = localStorage.getItem('token')\n\n    if(!this.jwtToken){\n      this.router.navigate(['/login']); \n    }\n  }\n\n  onFileSelected(event: any) {\n    this.selectedFile = event.target.files[0];\n  }\n\n  submit(): void {\n    if (!this.jwtToken) {\n      swal.fire('Error!', 'Please log in to create a post.', 'error');\n      return;\n    }\n  \n    const content = this.post.content;\n    const image = this.selectedFile;\n  \n    if (!content && !image) {\n      swal.fire('Error!', 'Please provide either post content or an image.', 'error');\n      return;\n    }\n  \n    const formData = new FormData();\n    formData.append('content', content);\n  \n    if (image) {\n      formData.append('image', image, image.name);\n    }\n  console.log(formData);\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${this.jwtToken}`\n    });\n  \n    this.http.post<any>('http://localhost:9200/user/post', formData, {\n      headers: headers\n    }).subscribe(\n      (response) => {\n        // Log the content of formData after the request completes\n        console.log('Form Data Content:', formData.get('content'));\n        console.log('Form Data Image:', formData.get('image'));\n        this.post.content = ''; // Reset content\n        this.selectedFile = null; // Reset selectedFile\n        swal.fire({\n          title: 'Success!',\n          text: response.message,\n          icon: 'success',\n          timer: 1500,\n          showConfirmButton: false\n        });\n        this.router.navigate(['/']); \n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n  \n}","<div class=\"main-w3layouts wrapper\">\n    <h3>Create a post!</h3>\n    <div class=\"main-agileinfo\">\n        <div class=\"agileits-top\">\n              <form (ngSubmit)=\"submit()\">\n                <div>\n                  <label for=\"content\">Content:</label>\n                  <textarea id=\"content\" [(ngModel)]=\"post.content\" name=\"content\" placeholder=\"Write your post here...\" required></textarea>\n                  <input type=\"file\"  name=\"image\" class=\"a\" (change)=\"onFileSelected($event)\" />\n                </div>\n                <input type=\"submit\" value=\"POST\">\n              </form>\n        </div>\n    </div>\n</div>"],"mappings":";AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAI9D,OAAOC,IAAI,MAAM,aAAa;;;;;AAO9B,OAAM,MAAOC,aAAa;EASxBC,YAAoBC,WAAwB,EAAUC,IAAgB,EAAUC,MAAa;IAAzE,KAAAF,WAAW,GAAXA,WAAW;IAAuB,KAAAC,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IARtF,KAAAC,aAAa,GAAG,KAAK;IACrB,KAAAC,YAAY,GAAgB,IAAI;IAChC,KAAAC,QAAQ,GAAkB,IAAI;IAC9B,KAAAC,IAAI,GAAG;MACLC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAC;KACP;EAE+F;EAEhGC,QAAQA,CAAA;IACN,IAAI,CAACJ,QAAQ,GAAGK,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE7C,IAAG,CAAC,IAAI,CAACN,QAAQ,EAAC;MAChB,IAAI,CAACH,MAAM,CAACU,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;EAEpC;EAEAC,cAAcA,CAACC,KAAU;IACvB,IAAI,CAACV,YAAY,GAAGU,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAC3C;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAAC,IAAI,CAACZ,QAAQ,EAAE;MAClBR,IAAI,CAACqB,IAAI,CAAC,QAAQ,EAAE,iCAAiC,EAAE,OAAO,CAAC;MAC/D;;IAGF,MAAMX,OAAO,GAAG,IAAI,CAACD,IAAI,CAACC,OAAO;IACjC,MAAMC,KAAK,GAAG,IAAI,CAACJ,YAAY;IAE/B,IAAI,CAACG,OAAO,IAAI,CAACC,KAAK,EAAE;MACtBX,IAAI,CAACqB,IAAI,CAAC,QAAQ,EAAE,iDAAiD,EAAE,OAAO,CAAC;MAC/E;;IAGF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEd,OAAO,CAAC;IAEnC,IAAIC,KAAK,EAAE;MACTW,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEb,KAAK,EAAEA,KAAK,CAACc,IAAI,CAAC;;IAE/CC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;IACnB,MAAMM,OAAO,GAAG,IAAI7B,WAAW,CAAC;MAC9B8B,aAAa,EAAE,UAAU,IAAI,CAACrB,QAAQ;KACvC,CAAC;IAEF,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAM,iCAAiC,EAAEa,QAAQ,EAAE;MAC/DM,OAAO,EAAEA;KACV,CAAC,CAACE,SAAS,CACTC,QAAQ,IAAI;MACX;MACAL,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEL,QAAQ,CAACU,GAAG,CAAC,SAAS,CAAC,CAAC;MAC1DN,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEL,QAAQ,CAACU,GAAG,CAAC,OAAO,CAAC,CAAC;MACtD,IAAI,CAACvB,IAAI,CAACC,OAAO,GAAG,EAAE,CAAC,CAAC;MACxB,IAAI,CAACH,YAAY,GAAG,IAAI,CAAC,CAAC;MAC1BP,IAAI,CAACqB,IAAI,CAAC;QACRY,KAAK,EAAE,UAAU;QACjBC,IAAI,EAAEH,QAAQ,CAACI,OAAO;QACtBC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,IAAI;QACXC,iBAAiB,EAAE;OACpB,CAAC;MACF,IAAI,CAACjC,MAAM,CAACU,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC,EACAwB,KAAK,IAAI;MACRb,OAAO,CAACa,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;;SAtEWtC,aAAa;;mBAAbA,MAAa,EAAAuC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,UAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA;AAAA;;QAAb9C,MAAa;EAAA+C,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCX1Bd,EAAA,CAAAgB,cAAA,aAAoC;MAC5BhB,EAAA,CAAAiB,MAAA,qBAAc;MAAAjB,EAAA,CAAAkB,YAAA,EAAK;MACvBlB,EAAA,CAAAgB,cAAA,aAA4B;MAEZhB,EAAA,CAAAmB,UAAA,sBAAAC,gDAAA;QAAA,OAAYL,GAAA,CAAAnC,MAAA,EAAQ;MAAA,EAAC;MACzBoB,EAAA,CAAAgB,cAAA,UAAK;MACkBhB,EAAA,CAAAiB,MAAA,eAAQ;MAAAjB,EAAA,CAAAkB,YAAA,EAAQ;MACrClB,EAAA,CAAAgB,cAAA,kBAAgH;MAAzFhB,EAAA,CAAAmB,UAAA,2BAAAE,yDAAAC,MAAA;QAAA,OAAAP,GAAA,CAAA9C,IAAA,CAAAC,OAAA,GAAAoD,MAAA;MAAA,EAA0B;MAA+DtB,EAAA,CAAAkB,YAAA,EAAW;MAC3HlB,EAAA,CAAAgB,cAAA,gBAA+E;MAApChB,EAAA,CAAAmB,UAAA,oBAAAI,gDAAAD,MAAA;QAAA,OAAUP,GAAA,CAAAvC,cAAA,CAAA8C,MAAA,CAAsB;MAAA,EAAC;MAA5EtB,EAAA,CAAAkB,YAAA,EAA+E;MAEjFlB,EAAA,CAAAwB,SAAA,gBAAkC;MACpCxB,EAAA,CAAAkB,YAAA,EAAO;;;MAJoBlB,EAAA,CAAAyB,SAAA,GAA0B;MAA1BzB,EAAA,CAAA0B,UAAA,YAAAX,GAAA,CAAA9C,IAAA,CAAAC,OAAA,CAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}