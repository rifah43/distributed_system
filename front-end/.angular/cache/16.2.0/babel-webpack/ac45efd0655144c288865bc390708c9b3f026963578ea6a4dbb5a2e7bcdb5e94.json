{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nexport class PostComponent {\n  constructor(formbuilder, http, router) {\n    this.formbuilder = formbuilder;\n    this.http = http;\n    this.router = router;\n    this.authenticated = false;\n    this.selectedFile = null;\n    this.jwtToken = null;\n  }\n  ngOnInit() {\n    this.jwtToken = localStorage.getItem('token');\n    if (this.jwtToken) {\n      this.form = this.formbuilder.group({\n        content: [''],\n        image: ['']\n      });\n    } else {\n      this.router.navigate(['/login']);\n    }\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  submit() {\n    if (!this.jwtToken) {\n      swal.fire('Error!', 'Please log in to create a post.', 'error');\n      return;\n    }\n    const content = this.form.get('content')?.value;\n    const image = this.selectedFile;\n    console.log();\n    if (!content && !image) {\n      swal.fire('Error!', 'Please provide either post content or an image.', 'error');\n      return;\n    }\n    const post = this.form.getRawValue();\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${this.jwtToken}`\n    });\n    if (image) {\n      post.image = this.selectedFile;\n      this.http.post('http://localhost:9200/user/post', post, {\n        headers: headers\n      }).subscribe(response => {\n        console.log(response);\n        this.form.reset();\n        swal.fire({\n          title: 'Success!',\n          text: response.message,\n          icon: 'success',\n          timer: 1500,\n          showConfirmButton: false\n        });\n        this.selectedFile = null;\n        this.router.navigate(['/']);\n      }, error => {\n        console.error(error);\n      });\n    } else {\n      this.http.post('http://localhost:9200/user/post', post, {\n        headers: headers\n      }).subscribe(response => {\n        swal.fire({\n          title: 'Success!',\n          text: response.message,\n          icon: 'success',\n          timer: 1500,\n          showConfirmButton: false\n        });\n        this.form.reset();\n        this.router.navigate(['/']);\n      });\n    }\n  }\n}\n_class = PostComponent;\n_class.ɵfac = function PostComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-post\"]],\n  decls: 12,\n  vars: 1,\n  consts: [[1, \"main-w3layouts\", \"wrapper\"], [1, \"main-agileinfo\"], [1, \"agileits-top\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"content\"], [\"formControlName\", \"content\", \"id\", \"content\", \"placeholder\", \"Write your post here...\", \"required\", \"\"], [\"type\", \"file\", \"formControlName\", \"image\", 1, \"a\", 3, \"change\"], [\"type\", \"submit\", \"value\", \"POST\"]],\n  template: function PostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n      i0.ɵɵtext(2, \"Create a post!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function PostComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(6, \"div\")(7, \"label\", 4);\n      i0.ɵɵtext(8, \"Content:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"textarea\", 5);\n      i0.ɵɵelementStart(10, \"input\", 6);\n      i0.ɵɵlistener(\"change\", function PostComponent_Template_input_change_10_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(11, \"input\", 7);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["HttpHeaders","swal","PostComponent","constructor","formbuilder","http","router","authenticated","selectedFile","jwtToken","ngOnInit","localStorage","getItem","form","group","content","image","navigate","onFileSelected","event","target","files","submit","fire","get","value","console","log","post","getRawValue","headers","Authorization","subscribe","response","reset","title","text","message","icon","timer","showConfirmButton","error","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","selectors","decls","vars","consts","template","PostComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PostComponent_Template_form_ngSubmit_5_listener","ɵɵelement","PostComponent_Template_input_change_10_listener","$event","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\HP\\Desktop\\cpp\\new\\distributed_system\\front-end\\src\\app\\post\\post.component.ts","C:\\Users\\HP\\Desktop\\cpp\\new\\distributed_system\\front-end\\src\\app\\post\\post.component.html"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n  form: FormGroup;\n  authenticated = false;\n  selectedFile: File | null = null;\n  jwtToken: string | null = null;\n\n  constructor(private formbuilder: FormBuilder, private http: HttpClient, private router:Router) {}\n\n  ngOnInit(): void {\n    this.jwtToken = localStorage.getItem('token')\n\n    if(this.jwtToken){\n    this.form = this.formbuilder.group({\n      content: [''],\n      image: [''],\n    });\n  }\n  else{\n    this.router.navigate(['/login']); \n  }\n  }\n\n  onFileSelected(event: any) {\n    this.selectedFile = event.target.files[0];\n  }\n\n  submit(): void {\n    if (!this.jwtToken) {\n      swal.fire('Error!', 'Please log in to create a post.', 'error');\n      return;\n    }\n\n    const content = this.form.get('content')?.value;\n    const image = this.selectedFile;\n\n    console.log()\n\n    if (!content && !image) {\n      swal.fire('Error!', 'Please provide either post content or an image.', 'error');\n      return;\n    }\n\n    const post = this.form.getRawValue();\n\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${this.jwtToken}`\n    });\n\n    if (image) {\n      post.image = this.selectedFile;\n\n      this.http.post<any>('http://localhost:9200/user/post', post, {\n        headers: headers\n      }).subscribe(\n        (response) => {\n          console.log(response);\n          this.form.reset();\n          swal.fire({\n            title: 'Success!',\n            text: response.message,\n            icon: 'success',\n            timer: 1500,\n            showConfirmButton: false\n          });\n          this.selectedFile = null;\n          this.router.navigate(['/']); \n        },\n        (error) => {\n          console.error(error);\n        }\n      );\n    } else {\n      this.http.post('http://localhost:9200/user/post', post, {\n        headers: headers\n      }).subscribe(\n        (response: any) => {\n          swal.fire({\n            title: 'Success!',\n            text: response.message,\n            icon: 'success',\n            timer: 1500,\n            showConfirmButton: false\n          });\n          this.form.reset();\n          this.router.navigate(['/']); \n        }\n      );\n    }\n  }\n}","<div class=\"main-w3layouts wrapper\">\n    <h3>Create a post!</h3>\n    <div class=\"main-agileinfo\">\n        <div class=\"agileits-top\">\n            <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n                <div>\n                  <label for=\"content\">Content:</label>\n                  <textarea formControlName=\"content\" id=\"content\" placeholder=\"Write your post here...\" required></textarea>\n                  <input type=\"file\" formControlName=\"image\" class=\"a\" (change)=\"onFileSelected($event)\" />\n                </div>\n                <input type=\"submit\" value=\"POST\">\n              </form>\n        </div>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}